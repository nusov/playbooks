---
# Initialize the master node
- name: initialize the cluster
  ansible.builtin.command: "kubeadm init --pod-network-cidr={{ pod_network_cidr }}"
  register: kubeadm

- debug: 
    var: kubeadm.stdout_lines

# Remove taints
- name: Remove taints on control plane
  ansible.builtin.command: "kubectl taint nodes --all node-role.kubernetes.io/control-plane-"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: untaint

# Install network
- name: Install network
  ansible.builtin.command: "kubectl apply -f {{ cni_manifest }}"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: kubectl

- name: Print output
  debug:
    var: kubectl.stdout_lines

# Install longhorn
- name: Install longhorn
  ansible.builtin.command: "kubectl apply -f {{ csi_manifest }}"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: csi

- name: Print output
  ansible.builtin.debug:
    var: csi.stdout_lines

# Generate token to join workers
- name: Generate join command
  ansible.builtin.command: kubeadm token create --print-join-command
  register: join_command

- name: Print join command outout
  ansible.builtin.debug:
    var: join_command.stdout_lines

- name: set join command
  ansible.builtin.set_fact:
    join_cmd: "{{ join_command.stdout_lines[0] }}"